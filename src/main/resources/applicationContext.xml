<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>
	
	<!-- <import resource="applicationContext-i18n.xml" />
	<import resource="applicationContext-shiro.xml" />
	<import resource="applicationContext-shiro-common.xml" />
	<import resource="applicationContext-cache.xml" />
	<import resource="applicationContext-mail.xml" />
	<import resource="applicationContext-quartz-cluster.xml" /> -->
	
	<!-- 可选配置 -->
	<!--<import resource="applicationContext-bpm.xml" /> -->
 	<import resource="applicationContext-mybatis.xml"/>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan
		base-package="ykk.**.service.impl">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-unresolvable="true" location="classpath*:/application.properties" />

		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
 			
 			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
       		
      		<!-- 超过时间限制，回收没有用(废弃)的连接（默认为 300秒，调整为180） -->
      		<property name="removeAbandonedTimeout"><value>300</value></property>
        	<!-- 超过removeAbandonedTimeout时间后，是否进 行没用连接（废弃）的回收（默认为false，调整为true) -->
      		<property name="removeAbandoned"><value>true</value></property>
			<!-- sql 心跳 -->
			<!--打开检查,用异步线程evict进行检查 ;需设置参数timeBetweenEvictionRunsMillis>0),
				定时对线程池中的链接进行validationQuery校验，对无效的链接进行关闭后，并适当建立链接保证最小的minIdle连接数-->
 			<property name="testWhileIdle"><value>true</value></property> 
	        <property name="testOnBorrow"><value>false</value></property>
	        <property name="testOnReturn"><value>false</value></property>
	        <property name="validationQuery"><value>select 1 from dual</value></property>
 			<!-- 连接Idle一个小时后超时 -->
 			<!-- 设置的Evict线程的时间，单位ms，大于0才会开启evict检查线程 -->
			<property name="timeBetweenEvictionRunsMillis" value="3000" />
			<property name="minEvictableIdleTimeMillis" value="3000" />
 			
		</bean>
	</beans>

	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties" />

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
			
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
       		
      		<!-- 超过时间限制，回收没有用(废弃)的连接（默认为 300秒，调整为180） -->
      		<property name="removeAbandonedTimeout"><value>30000</value></property>
        	<!-- 超过removeAbandonedTimeout时间后，是否进 行没用连接（废弃）的回收（默认为false，调整为true) -->
      		<property name="removeAbandoned"><value>true</value></property>
			<!-- sql 心跳 -->
			<!--打开检查,用异步线程evict进行检查 -->
 			<property name="testWhileIdle"><value>true</value></property> 
	        <property name="testOnBorrow"><value>false</value></property>
	        <property name="testOnReturn"><value>false</value></property>
	        <property name="validationQuery"><value>select 1 from dual</value></property>
 			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3000" />
			<property name="minEvictableIdleTimeMillis" value="3000" />
		</bean>
	</beans>
</beans>